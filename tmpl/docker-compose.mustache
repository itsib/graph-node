version: "3.3"

services:

  nginx:
    image: nginx
    volumes:
      - ./nginx-conf:/etc/nginx/templates
      - ./nginx-logs:/var/log/nginx
    ports:
      - '4000:80'
    environment:
      - AUTH_TOKEN={{deployAccessToken}}
      - QUERY_NODE={{prefix queryNode 'query'}}
      - DEPLOY_NODE={{prefix defaultIndexedNode}}
    networks:
      - graph_net
    depends_on:
      - graph_explorer
      - {{prefix queryNode 'query'}}
      - {{prefix defaultIndexedNode}}
      - ipfs

  graph_explorer:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '127.0.0.1:8080:8080'
    depends_on:
      - postgres
    environment:
      PG_HOST: postgres
      PG_USER: {{dbUser}}
      PG_PASSWORD: {{dbPassword}}
      PG_DATABASE: graph-node
    networks:
      - graph_net

  {{prefix queryNode 'query'}}:
    image: sergeyitsib/graph-node
    ports:
      - '127.0.0.1:8000:8000'
      - '127.0.0.1:8001:8001'
      - '127.0.0.1:8030:8030'
    depends_on:
      - ipfs
      - postgres
    environment:
      node_id: {{prefix queryNode 'query'}}
      node_role: query-node
      postgres_host: postgres
      postgres_user: {{dbUser}}
      postgres_pass: {{dbPassword}}
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      GRAPH_NODE_CONFIG: /var/lib/graph-node/config.toml
      BLOCK_INGESTOR: {{prefix @root.defaultIndexedNode}}
    volumes:
      - ./nodes-conf:/var/lib/graph-node
    networks:
      - graph_net

  {{prefix defaultIndexedNode}}:
    image: sergeyitsib/graph-node
    ports:
      - '127.0.0.1:8120:8020'
    depends_on:
      - ipfs
      - postgres
    environment:
      node_id: {{prefix defaultIndexedNode}}
      node_role: index-node
      postgres_host: postgres
      postgres_user: {{dbUser}}
      postgres_pass: {{dbPassword}}
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      GRAPH_NODE_CONFIG: /var/lib/graph-node/config.toml
      BLOCK_INGESTOR: {{prefix @root.defaultIndexedNode}}
#      RUST_LOG: info
#      GRAPH_LOG: info
    volumes:
      - ./nodes-conf:/var/lib/graph-node
    networks:
      - graph_net

{{#indexedNodes}}
  {{prefix name}}:
    image: sergeyitsib/graph-node
    depends_on:
      - ipfs
      - postgres
    environment:
      node_id: {{prefix name}}
      node_role: index-node
      postgres_host: postgres
      postgres_user: {{@root.dbUser}}
      postgres_pass: {{@root.dbPassword}}
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      GRAPH_NODE_CONFIG: /var/lib/graph-node/config.toml
      BLOCK_INGESTOR: {{prefix @root.defaultIndexedNode}}
    volumes:
      - ./nodes-conf:/var/lib/graph-node
    networks:
      - graph_net

{{/indexedNodes}}
  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '127.0.0.1:5001:5001'
    networks:
      - graph_net
    volumes:
      - graph_ipfs:/data/ipfs

  postgres:
    image: postgres
    ports:
      - '127.0.0.1:5432:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: {{dbUser}}
      POSTGRES_PASSWORD: {{dbPassword}}
      POSTGRES_DB: graph-node
    networks:
      - graph_net
    volumes:
      - graph_postgres:/var/lib/postgresql/data

volumes:
  graph_postgres:
  graph_ipfs:

networks:
  graph_net:
    driver: bridge
